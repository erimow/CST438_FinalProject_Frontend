{"ast":null,"code":"var _jsxFileName = \"/Users/erik/eclipse-workspace/Final_Project/frontend/src/components/ListMedia.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SERVER_URL } from '../constants';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListMedia(props) {\n  _s();\n  const [medias, setMedia] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // called once after intial render\n    fetchMedia();\n  }, []);\n  const fetchMedia = () => {\n    console.log(\"fetchMedia\");\n    fetch(`${SERVER_URL}/api/media`).then(response => response.json()).then(data => {\n      console.log(\"assignment length \" + data.length);\n      setMedia(data);\n    }).catch(err => console.error(err));\n  };\n  const headers = ['Media Title', 'Type', 'Genre', 'Rating', 'Review', ' ', ' '];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      margin: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [message, \"\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Center\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers.map((title, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: title\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 51\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: medias.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/gradeAssignment/${medias[idx].id}`,\n                children: \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/editAssignment/${medias[idx].id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/addReview/`,\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(ListMedia, \"dTyWNNU5K38np7KtbpdSWYvu/Is=\");\n_c = ListMedia;\nexport default ListMedia;\nvar _c;\n$RefreshReg$(_c, \"ListMedia\");","map":{"version":3,"names":["React","useState","useEffect","SERVER_URL","Link","jsxDEV","_jsxDEV","ListMedia","props","_s","medias","setMedia","message","setMessage","fetchMedia","console","log","fetch","then","response","json","data","length","catch","err","error","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","className","map","title","idx","row","type","genre","rating","review","to","id","_c","$RefreshReg$"],"sources":["/Users/erik/eclipse-workspace/Final_Project/frontend/src/components/ListMedia.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {SERVER_URL} from '../constants';\nimport {Link} from 'react-router-dom';\n\nfunction ListMedia(props) {\n    const [medias, setMedia] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n    // called once after intial render\n    fetchMedia();\n    }, [] )\n\n\n    const fetchMedia = () => {\n        console.log(\"fetchMedia\");\n        fetch(`${SERVER_URL}/api/media`)\n        .then((response) => response.json() ) \n        .then((data) => { \n        console.log(\"assignment length \"+data.length);\n        setMedia(data);\n        }) \n        .catch(err => console.error(err)); \n  };\n\n  const headers = ['Media Title', 'Type', 'Genre', 'Rating', 'Review', ' ', ' '];\n\n    return (\n      <div>\n        <h3>Reviews</h3>\n        <div margin=\"auto\" >\n          <h4>{message}&nbsp;</h4>\n              <table className=\"Center\"> \n                <thead>\n                  <tr>\n                    {headers.map((title, idx) => (<th key={idx}>{title}</th>))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {medias.map((row, idx) => (\n                    <tr key={idx}>\n                      <td>{row.title}</td>\n                      <td>{row.type}</td>\n                      <td>{row.genre}</td>\n                      <td>{row.rating}</td>\n                      <td>{row.review}</td>\n                      <td>\n                        <Link to={`/gradeAssignment/${medias[idx].id}`} >Grade</Link>\n                      </td>\n                      <td><Link to={`/editAssignment/${medias[idx].id}`}>Edit</Link></td>\n\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <Link to={`/addReview/`}>Add Review</Link>\n          </div>\n      </div>\n    )\n}  \n\nexport default ListMedia;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}